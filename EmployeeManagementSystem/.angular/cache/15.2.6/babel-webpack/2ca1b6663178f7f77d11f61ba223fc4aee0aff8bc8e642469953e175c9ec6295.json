{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeMinutes(ctx_r18.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.changeSeconds(ctx_r20.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return i0.ɵɵresetView(ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateMinutes($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return i0.ɵɵresetView(ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.updateSeconds($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    i0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    i0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.toggleMeridian());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.changeMinutes(-ctx_r34.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.changeSeconds(-ctx_r36.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nclass TimepickerActions {\n  writeValue(value) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n  changeHours(event) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n  changeMinutes(event) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n  changeSeconds(event) {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n  setTime(value) {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n  updateControls(value) {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\nTimepickerActions.ɵfac = function TimepickerActions_Factory(t) {\n  return new (t || TimepickerActions)();\n};\nTimepickerActions.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerActions,\n  factory: TimepickerActions.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerActions, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], null, null);\n})();\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n  return true;\n}\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n  return true;\n}\nfunction toNumber(value) {\n  if (typeof value === 'undefined') {\n    return NaN;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return parseInt(value, dex);\n}\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n  const hour = toNumber(value);\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n  return hour;\n}\nfunction parseMinutes(value) {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n  return minute;\n}\nfunction parseSeconds(value) {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n  return seconds;\n}\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n  return value;\n}\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n  if (!diff) {\n    return value;\n  }\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n  return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n    return value;\n  }\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n  return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n  const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\nfunction padNumber(value) {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n  return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n  const newDate = setTime(new Date(), diff);\n  if (!newDate) {\n    return false;\n  }\n  if (max && newDate > max) {\n    return false;\n  }\n  if (min && newDate < min) {\n    return false;\n  }\n  return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n  return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n  return true;\n}\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n  return true;\n}\nfunction getControlsValue(state) {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\nfunction timepickerControls(value, state) {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const {\n    min,\n    max,\n    hourStep,\n    minuteStep,\n    secondsStep,\n    showSeconds\n  } = state;\n  const res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n  if (!value) {\n    return res;\n  }\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, {\n      hour: hourStep\n    });\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n  if (min) {\n    const _newHour = changeTime(value, {\n      hour: -hourStep\n    });\n    res.canDecrementHours = min < _newHour;\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: -minuteStep\n      });\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n    }\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: -secondsStep\n      });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n  return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n  constructor() {\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds changes step */\n    this.secondsStep = 10;\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    this.showMeridian = true;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true emptyTime is not marked as invalid */\n    this.allowEmptyTime = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** hours aria label */\n    this.ariaLabelHours = 'hours';\n    /** minutes aria label */\n    this.ariaLabelMinutes = 'minutes';\n    /** seconds aria label */\n    this.ariaLabelSeconds = 'seconds';\n  }\n}\nTimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) {\n  return new (t || TimepickerConfig)();\n};\nTimepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerConfig,\n  factory: TimepickerConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst initialState = {\n  value: void 0,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n};\nfunction timepickerReducer(state = initialState, action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          minute: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n        const _newTime = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n        const _newTime = setTime(state.value, action.payload);\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        const _newControlsState = timepickerControls(state.value, action.payload);\n        const _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n        return Object.assign({}, state, _newState);\n      }\n    default:\n      return state;\n  }\n}\nclass TimepickerStore extends MiniStore {\n  constructor() {\n    const _dispatcher = new BehaviorSubject({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\nTimepickerStore.ɵfac = function TimepickerStore_Factory(t) {\n  return new (t || TimepickerStore)();\n};\nTimepickerStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TimepickerStore,\n  factory: TimepickerStore.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerStore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\nclass TimepickerComponent {\n  constructor(_config, _cd, _store, _timepickerActions) {\n    this._cd = _cd;\n    this._store = _store;\n    this._timepickerActions = _timepickerActions;\n    /** hours change step */\n    this.hourStep = 1;\n    /** minutes change step */\n    this.minuteStep = 5;\n    /** seconds change step */\n    this.secondsStep = 10;\n    /** if true hours and minutes fields will be readonly */\n    this.readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    this.disabled = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    this.mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    this.arrowkeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    this.showSpinners = true;\n    /** if true meridian button will be shown */\n    this.showMeridian = true;\n    /** show minutes in timepicker */\n    this.showMinutes = true;\n    /** show seconds in timepicker */\n    this.showSeconds = false;\n    /** meridian labels based on locale */\n    this.meridians = ['AM', 'PM'];\n    /** placeholder for hours field in timepicker */\n    this.hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timepicker */\n    this.minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timepicker */\n    this.secondsPlaceholder = 'SS';\n    /** emits true if value is a valid date */\n    this.isValid = new EventEmitter();\n    /** emits value of meridian*/\n    this.meridianChange = new EventEmitter();\n    // ui variables\n    this.hours = '';\n    this.minutes = '';\n    this.seconds = '';\n    this.meridian = '';\n    // min\\max validation for input fields\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n    // aria-label variables\n    this.labelHours = 'hours';\n    this.labelMinutes = 'minutes';\n    this.labelSeconds = 'seconds';\n    // time picker controls state\n    this.canIncrementHours = true;\n    this.canIncrementMinutes = true;\n    this.canIncrementSeconds = true;\n    this.canDecrementHours = true;\n    this.canDecrementMinutes = true;\n    this.canDecrementSeconds = true;\n    this.canToggleMeridian = true;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onChange = Function.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onTouched = Function.prototype;\n    this.config = _config;\n    Object.assign(this, this.config);\n    this.timepickerSub = _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    });\n    _store.select(state => state.controls).subscribe(controlsState => {\n      const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n      this.isValid.emit(isValid);\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible() {\n    return this.showSpinners && !this.readonlyInput;\n  }\n  get isEditable() {\n    return !(this.readonlyInput || this.disabled);\n  }\n  resetValidation() {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n  isPM() {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n  prevDef($event) {\n    $event.preventDefault();\n  }\n  wheelSign($event) {\n    return Math.sign($event.deltaY || 0) * -1;\n  }\n  ngOnChanges() {\n    this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n  }\n  changeHours(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step,\n      source\n    }));\n  }\n  changeMinutes(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeMinutes({\n      step,\n      source\n    }));\n  }\n  changeSeconds(step, source = '') {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeSeconds({\n      step,\n      source\n    }));\n  }\n  updateHours(target) {\n    this.resetValidation();\n    this.hours = target.value;\n    const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateMinutes(target) {\n    this.resetValidation();\n    this.minutes = target.value;\n    const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  updateSeconds(target) {\n    this.resetValidation();\n    this.seconds = target.value;\n    const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._updateTime();\n  }\n  isValidLimit() {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n  isOneOfDatesIsEmpty() {\n    return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n  }\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n    const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n    if (!isValid) {\n      this.isValid.emit(false);\n      this.onChange(null);\n      return;\n    }\n    this._store.dispatch(this._timepickerActions.setTime({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }));\n  }\n  toggleMeridian() {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(this._timepickerActions.changeHours({\n      step: _hoursPerDayHalf,\n      source: ''\n    }));\n  }\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj) {\n    if (isValidDate(obj)) {\n      this.resetValidation();\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue());\n    }\n  }\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n  ngOnDestroy() {\n    this.timepickerSub?.unsubscribe();\n  }\n  _renderTime(value) {\n    if (!value || !isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n      this.meridianChange.emit(this.meridian);\n      return;\n    }\n    const _value = parseTime(value);\n    if (!_value) {\n      return;\n    }\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      this.meridianChange.emit(this.meridian);\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\nTimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) {\n  return new (t || TimepickerComponent)(i0.ɵɵdirectiveInject(TimepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimepickerStore), i0.ɵɵdirectiveInject(TimepickerActions));\n};\nTimepickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TimepickerComponent,\n  selectors: [[\"timepicker\"]],\n  inputs: {\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondsStep: \"secondsStep\",\n    readonlyInput: \"readonlyInput\",\n    disabled: \"disabled\",\n    mousewheel: \"mousewheel\",\n    arrowkeys: \"arrowkeys\",\n    showSpinners: \"showSpinners\",\n    showMeridian: \"showMeridian\",\n    showMinutes: \"showMinutes\",\n    showSeconds: \"showSeconds\",\n    meridians: \"meridians\",\n    min: \"min\",\n    max: \"max\",\n    hoursPlaceholder: \"hoursPlaceholder\",\n    minutesPlaceholder: \"minutesPlaceholder\",\n    secondsPlaceholder: \"secondsPlaceholder\"\n  },\n  outputs: {\n    isValid: \"isValid\",\n    meridianChange: \"meridianChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), i0.ɵɵNgOnChangesFeature],\n  decls: 31,\n  vars: 33,\n  consts: [[1, \"text-center\", 3, \"hidden\"], [\"href\", \"javascript:void(0);\", 1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group mb-3\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n  template: function TimepickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\", 0)(3, \"td\")(4, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n        return ctx.changeHours(ctx.hourStep);\n      });\n      i0.ɵɵelement(5, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"input\", 5);\n      i0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) {\n        ctx.prevDef($event);\n        return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n      })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() {\n        return ctx.changeHours(ctx.hourStep, \"key\");\n      })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() {\n        return ctx.changeHours(-ctx.hourStep, \"key\");\n      })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) {\n        return ctx.updateHours($event.target);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n      i0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"tr\", 0)(22, \"td\")(23, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() {\n        return ctx.changeHours(-ctx.hourStep);\n      });\n      i0.ɵɵelement(24, \"span\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n      i0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n      i0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n      i0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n      i0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'timepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\",\n      styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: TimepickerConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimepickerStore\n    }, {\n      type: TimepickerActions\n    }];\n  }, {\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondsStep: [{\n      type: Input\n    }],\n    readonlyInput: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    mousewheel: [{\n      type: Input\n    }],\n    arrowkeys: [{\n      type: Input\n    }],\n    showSpinners: [{\n      type: Input\n    }],\n    showMeridian: [{\n      type: Input\n    }],\n    showMinutes: [{\n      type: Input\n    }],\n    showSeconds: [{\n      type: Input\n    }],\n    meridians: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    hoursPlaceholder: [{\n      type: Input\n    }],\n    minutesPlaceholder: [{\n      type: Input\n    }],\n    secondsPlaceholder: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Output\n    }],\n    meridianChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TimepickerModule {\n  static forRoot() {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n}\nTimepickerModule.ɵfac = function TimepickerModule_Factory(t) {\n  return new (t || TimepickerModule)();\n};\nTimepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TimepickerModule\n});\nTimepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [TimepickerStore],\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TimepickerComponent],\n      exports: [TimepickerComponent],\n      providers: [TimepickerStore]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","NG_VALUE_ACCESSOR","BehaviorSubject","MiniStore","MiniState","i4","CommonModule","TimepickerActions","writeValue","value","type","WRITE_VALUE","payload","changeHours","event","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","ɵfac","ɵprov","args","providedIn","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","NaN","parseInt","isNumber","parseHours","isPM","hour","parseMinutes","minute","parseSeconds","seconds","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputLimitValid","isOneOfDatesEmpty","isInputValid","canChangeValue","state","readonlyInput","disabled","source","mousewheel","arrowkeys","canChangeHours","step","canIncrementHours","canDecrementHours","canChangeMinutes","canIncrementMinutes","canDecrementMinutes","canChangeSeconds","canIncrementSeconds","canDecrementSeconds","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","timepickerControls","res","canToggleMeridian","_newHour","_newMinutes","_newSeconds","TimepickerConfig","constructor","allowEmptyTime","showMinutes","hoursPlaceholder","minutesPlaceholder","secondsPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","initialState","config","timepickerReducer","action","Object","assign","_newTime","_newControlsState","_newState","TimepickerStore","_dispatcher","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","isValid","meridianChange","meridian","invalidHours","invalidMinutes","invalidSeconds","labelHours","labelMinutes","labelSeconds","onChange","Function","prototype","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","isTimepickerInputValid","isOneOfDatesIsEmpty","emit","markForCheck","isSpinnersVisible","isEditable","resetValidation","prevDef","$event","preventDefault","wheelSign","Math","sign","deltaY","ngOnChanges","updateHours","target","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","_hoursPerDayHalf","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","unsubscribe","_hours","getUTCSeconds","ChangeDetectorRef","ɵcmp","NgIf","selector","changeDetection","OnPush","providers","encapsulation","None","template","styles","TimepickerModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/TechExtensor-10/Desktop/testapi/EmployeeManagementSystem/node_modules/ngx-bootstrap/timepicker/fesm2020/ngx-bootstrap-timepicker.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass TimepickerActions {\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n}\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\nTimepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerActions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerActions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerActions, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n}\nTimepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n}\nTimepickerStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerStore, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerStore, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.timepickerSub?.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\nTimepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: i0.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: i0.ɵɵFactoryTarget.Component });\nTimepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: i0, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'timepicker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], encapsulation: ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\"\\n         href=\\\"javascript:void(0);\\\"\\n      >\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TimepickerConfig }, { type: i0.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, propDecorators: { hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondsStep: [{\n                type: Input\n            }], readonlyInput: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], arrowkeys: [{\n                type: Input\n            }], showSpinners: [{\n                type: Input\n            }], showMeridian: [{\n                type: Input\n            }], showMinutes: [{\n                type: Input\n            }], showSeconds: [{\n                type: Input\n            }], meridians: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hoursPlaceholder: [{\n                type: Input\n            }], minutesPlaceholder: [{\n                type: Input\n            }], secondsPlaceholder: [{\n                type: Input\n            }], isValid: [{\n                type: Output\n            }], meridianChange: [{\n                type: Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n}\nTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerModule, declarations: [TimepickerComponent], imports: [CommonModule], exports: [TimepickerComponent] });\nTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerModule, providers: [TimepickerStore], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}