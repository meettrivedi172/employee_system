{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:5029/api/\";\n  }\n  addEmployee(employee) {\n    return this.http.post(this.baseUrl + \"employee/add-employee\", employee);\n  }\n  getEmployeeList() {\n    return this.http.get(this.baseUrl + \"employee\");\n  }\n  deleteEmployee(id) {\n    // const url = `${this.baseUrl}/${id}`;\n    return this.http.delete(this.baseUrl + \"employee/\" + id);\n  }\n  singalEmployeeDetail(id) {\n    return this.http.get(this.baseUrl + \"employee/\" + id);\n  }\n  updateEmployee(id, employee) {\n    const url = this.baseUrl + \"employee/\" + id;\n    return this.http.put(url, employee);\n  }\n  getEmployees(params, department) {\n    let url = `${this.baseUrl}employee?`;\n    if (paragender) {\n      url += `gender=${gender}&`;\n    }\n    if (department) {\n      url += `department=${department}&`;\n    }\n    return this.http.get(url);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAE,4BAA4B;EACE;EAGvCC,WAAW,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAW,IAAI,CAACC,OAAO,GAAC,uBAAuB,EAAEF,QAAQ,CAAC;EACjF;EAGAG,eAAe;IAEb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,GAAC,UAAU,CAAC;EAE/C;EAIAG,cAAc,CAACC,EAAU;IACvB;IACA,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,IAAI,CAACL,OAAO,GAAC,WAAW,GAACI,EAAE,CAAC;EACxD;EACAE,oBAAoB,CAACF,EAAS;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,OAAO,GAAC,WAAW,GAACI,EAAE,CAAC;EACrD;EAEAG,cAAc,CAACH,EAAU,EAAEN,QAAkB;IAC3C,MAAMU,GAAG,GAAG,IAAI,CAACR,OAAO,GAAG,WAAW,GAAGI,EAAE;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAACD,GAAG,EAAEV,QAAQ,CAAC;EACrC;EAIAY,YAAY,CAACC,MAAU,EAAEC,UAAmB;IAC1C,IAAIJ,GAAG,GAAG,GAAG,IAAI,CAACR,OAAO,WAAW;IAEpC,IAAIa,UAAU,EAAE;MACdL,GAAG,IAAI,UAAUM,MAAM,GAAG;;IAG5B,IAAIF,UAAU,EAAE;MACdJ,GAAG,IAAI,cAAcI,UAAU,GAAG;;IAKpC,OAAO,IAAI,CAAChB,IAAI,CAACM,GAAG,CAAMM,GAAG,CAAC;EAChC;;AA/Cad,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqB,SAAfrB,eAAe;EAAAsB,YAFd;AAAM","names":["EmployeeService","constructor","http","addEmployee","employee","post","baseUrl","getEmployeeList","get","deleteEmployee","id","delete","singalEmployeeDetail","updateEmployee","url","put","getEmployees","params","department","paragender","gender","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\TechExtensor-10\\Desktop\\testapi\\EmployeeManagementSystem\\src\\app\\_employee\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Employee } from './employee';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseUrl= \"http://localhost:5029/api/\"\n  constructor(private http:HttpClient) { }\n\n\n  addEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(this.baseUrl+\"employee/add-employee\", employee);\n  }\n\n\n  getEmployeeList(){\n\n    return this.http.get(this.baseUrl+\"employee\")\n\n  }\n\n\n\n  deleteEmployee(id: number): Observable<any> {\n    // const url = `${this.baseUrl}/${id}`;\n    return this.http.delete(this.baseUrl+\"employee/\"+id);\n}\nsingalEmployeeDetail(id:number){\n    return this.http.get(this.baseUrl+\"employee/\"+id)\n}\n\nupdateEmployee(id: number, employee: Employee): Observable<any> {\n  const url = this.baseUrl + \"employee/\" + id;\n  return this.http.put(url, employee);\n}\n\n\n\ngetEmployees(params:any, department?: string): Observable<Employee[]> {\n  let url = `${this.baseUrl}employee?`;\n\n  if (paragender) {\n    url += `gender=${gender}&`;\n  }\n\n  if (department) {\n    url += `department=${department}&`;\n  }\n\n\n\n  return this.http.get<any>(url);\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}