{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet EmployeeListComponent = class EmployeeListComponent {\n  constructor(emplyoyeeservice) {\n    this.emplyoyeeservice = emplyoyeeservice;\n    this.genders = null;\n    this.department = null;\n    this.editmode = false;\n    this.id = 0;\n  }\n  ngOnInit() {\n    this.getemployeeList();\n    this.employeeForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      department: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required)\n    });\n    this.employeeEditForm = new FormGroup({\n      id: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      department: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required)\n    });\n  }\n  addEmployee() {\n    console.log(this.employeeForm.value);\n    this.emplyoyeeservice.addEmployee(this.employeeForm.value).subscribe(res => {\n      this.getemployeeList();\n    });\n    this.employeeForm.reset();\n  }\n  getemployeeList() {\n    //  this.emplyoyeeservice.getEmployeeList().subscribe(res=>{\n    //   console.log(res);\n    //   this.employeeList= res;\n    //  })\n    this.emplyoyeeservice.getEmployees(this.genders, this.department).subscribe(res => {\n      console.log(res);\n      this.employeeList = res;\n    });\n  }\n  deleteemployee(id) {\n    console.log(id);\n    this.emplyoyeeservice.deleteEmployee(id).subscribe(res => {\n      this.getemployeeList();\n    });\n  }\n  editEmplyoyeedata(id) {\n    this.id = id;\n    this.emplyoyeeservice.singalEmployeeDetail(id).subscribe(res => {\n      console.log(res);\n      this.editformvalue = res;\n      this.employeeEditForm.patchValue(this.editformvalue[0]);\n    });\n  }\n  updateEmplyoyeedata() {\n    this.emplyoyeeservice.updateEmployee(this.employeeEditForm.value.id, this.employeeEditForm.value).subscribe(res => {\n      console.log(res);\n      this.getemployeeList();\n    });\n  }\n};\nEmployeeListComponent = __decorate([Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})], EmployeeListComponent);\nexport { EmployeeListComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","EmployeeListComponent","constructor","emplyoyeeservice","ngOnInit","getemployeeList","employeeForm","email","required","name","dob","department","gender","employeeEditForm","id","addEmployee","console","log","value","subscribe","res","reset","getEmployees","genders","employeeList","deleteemployee","deleteEmployee","editEmplyoyeedata","singalEmployeeDetail","editformvalue","patchValue","updateEmplyoyeedata","updateEmployee","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\TechExtensor-10\\Desktop\\testapi\\EmployeeManagementSystem\\src\\app\\_employee\\employee-list\\employee-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup,FormControl ,Validators} from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit{\ngenders = null  ;\ndepartment=null;\n\nemployeeForm !:FormGroup;\nemployeeList:any;\neditmode=false;\nemployeeEditForm !:FormGroup;\nid:number =0;\n\neditformvalue:any;\n  constructor(private emplyoyeeservice:EmployeeService){}\n\n  ngOnInit(): void {\n   this.getemployeeList()\n\n    this.employeeForm= new FormGroup({\n      email: new FormControl('',Validators.required),\n      name: new FormControl('',Validators.required),\n      dob: new FormControl('',Validators.required),\n      department: new FormControl('',Validators.required),\n      gender: new FormControl('',Validators.required),\n\n    });\n\n    this.employeeEditForm= new FormGroup({\n      id: new FormControl('',Validators.required),\n      email: new FormControl('',Validators.required),\n      name: new FormControl('',Validators.required),\n      dob: new FormControl('',Validators.required),\n      department: new FormControl('',Validators.required),\n      gender: new FormControl('',Validators.required),\n\n    });\n\n  }\n\n\n\n  addEmployee(){\n    console.log(this.employeeForm.value)\n    this.emplyoyeeservice.addEmployee(this.employeeForm.value).subscribe(res=>{\n\n      this.getemployeeList();\n    })\n    this.employeeForm.reset();\n\n  }\n\n  getemployeeList(){\n\n\n\n    //  this.emplyoyeeservice.getEmployeeList().subscribe(res=>{\n    //   console.log(res);\n    //   this.employeeList= res;\n    //  })\n\n\n    this.emplyoyeeservice.getEmployees(this.genders,this.department).subscribe(res=>{\n      console.log(res);\n      this.employeeList= res;\n    })\n\n\n  }\n\n\n  deleteemployee(id:number){\n    console.log(id);\n    this.emplyoyeeservice.deleteEmployee(id).subscribe(res=>{\n\n      this.getemployeeList()\n    });\n\n\n  }\n\n  editEmplyoyeedata(id:number){\n    this.id = id;\n\n    this.emplyoyeeservice.singalEmployeeDetail(id).subscribe(res=>{\n      console.log(res);\n      this.editformvalue=res;\n      this.employeeEditForm.patchValue(this.editformvalue[0]);\n    })\n\n\n\n\n  }\n\n\n  updateEmplyoyeedata(){\n\n    this.emplyoyeeservice.updateEmployee(this.employeeEditForm.value.id,this.employeeEditForm.value).subscribe(res=>{\n       console.log(res);\n       this.getemployeeList()\n\n    })\n\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}